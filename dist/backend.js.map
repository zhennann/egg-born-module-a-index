{"version":3,"sources":["webpack://backend/webpack/bootstrap","webpack://backend/./backend/src/main.js","webpack://backend/./backend/src/config/config.js","webpack://backend/./backend/src/config/locales.js","webpack://backend/./backend/src/config/locale/zh-cn.js","webpack://backend/./backend/src/config/errors.js","webpack://backend/./backend/src/config/middlewares.js","webpack://backend/./backend/src/routes.js","webpack://backend/./backend/src/controller/version.js","webpack://backend/./backend/src/services.js","webpack://backend/./backend/src/service/version.js","webpack://backend/external \"require3\"","webpack://backend/./backend/src/models.js","webpack://backend/./backend/src/meta.js","webpack://backend/./backend/src/config/validation/schemas.js"],"names":[],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;AClFA,eAAe,mBAAO,CAAC,CAAoB;AAC3C,gBAAgB,mBAAO,CAAC,CAAqB;AAC7C,eAAe,mBAAO,CAAC,CAAoB;AAC3C,oBAAoB,mBAAO,CAAC,CAAyB;;AAErD;;AAEA;AACA,iBAAiB,mBAAO,CAAC,CAAa;AACtC;AACA,mBAAmB,mBAAO,CAAC,CAAe;AAC1C;AACA,iBAAiB,mBAAO,CAAC,EAAa;AACtC;AACA,eAAe,mBAAO,CAAC,EAAW;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC3BA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;AC5EA;AACA,WAAW,mBAAO,CAAC,CAAmB;AACtC;;;;;;;ACFA;AACA;;;;;;;ACDA;AACA;AACA;;;;;;;ACFA;AACA;;;;;;;ACDA,gBAAgB,mBAAO,CAAC,CAAyB;;AAEjD;AACA;AACA;AACA,KAAK,oFAAoF;AACzF,KAAK,kFAAkF;AACvF,KAAK,iFAAiF;AACtF;AACA;AACA;;;;;;;ACVA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACpBA,gBAAgB,mBAAO,CAAC,CAAsB;;AAE9C;AACA;AACA;AACA;AACA;AACA;;;;;;;ACPA,iBAAiB,mBAAO,CAAC,EAAU;AACnC;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA,gDAAgD,+CAA+C;AAC/F;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,iCAAiC,qBAAqB;AACtD;AACA;AACA,mEAAmE,UAAU;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,UAAU,aAAa,UAAU,GAAG,yBAAyB,MAAM,UAAU,IAAI,yBAAyB;AAC5I;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;AC1DA,qC;;;;;;ACAA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA,kBAAkB,mBAAO,CAAC,EAAgC;AAC1D;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,OAAO;AACP,kBAAkB;AAClB;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;;;;;;AClBA;AACA;AACA;AACA","file":"backend.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const config = require('./config/config.js');\nconst locales = require('./config/locales.js');\nconst errors = require('./config/errors.js');\nconst middlewares = require('./config/middlewares.js');\n\nmodule.exports = app => {\n\n  // routes\n  const routes = require('./routes.js')(app);\n  // services\n  const services = require('./services.js')(app);\n  // models\n  const models = require('./models.js')(app);\n  // meta\n  const meta = require('./meta.js')(app);\n\n  return {\n    routes,\n    services,\n    models,\n    config,\n    locales,\n    errors,\n    middlewares,\n    meta,\n  };\n\n};\n","// eslint-disable-next-line\nmodule.exports = appInfo => {\n  const config = {\n  };\n\n  // indexes\n  config.indexes = {\n    'a-version': {\n      aVersion: 'createdAt,updatedAt,module,version',\n      aVersionInit: 'createdAt,updatedAt,subdomain+module,version',\n    },\n    'a-authsimple': {\n      aAuthSimple: 'createdAt,updatedAt,userId',\n    },\n    'a-base': {\n      aAtom: 'createdAt,updatedAt,itemId,atomFlag,atomName,userIdCreated',\n      aAtomAction: 'createdAt,updatedAt,atomClassId+code,name',\n      aAtomClass: 'createdAt,updatedAt,module+atomClassName',\n      aAtomLabel: 'createdAt,updatedAt,userId,atomId',\n      aAtomLabelRef: 'createdAt,updatedAt,userId+labelId,atomId',\n      aAtomStar: 'createdAt,updatedAt,userId,atomId',\n      aAuth: 'createdAt,updatedAt,userId,providerId+profileId',\n      aAuthProvider: 'createdAt,updatedAt,module+providerName',\n      aComment: 'createdAt,updatedAt,atomId,userId,sorting',\n      aCommentHeart: 'createdAt,updatedAt,userId,atomId,commentId',\n      aFunction: 'createdAt,updatedAt,module+name,scene,atomClassId+action,sorting',\n      aFunctionLocale: 'createdAt,updatedAt,functionId',\n      aFunctionStar: 'createdAt,updatedAt,userId,functionId',\n      aLabel: 'createdAt,updatedAt,userId',\n      aRole: 'createdAt,updatedAt,roleName,sorting,roleIdParent',\n      aRoleExpand: 'createdAt,updatedAt,roleId,roleIdBase',\n      aRoleFunction: 'createdAt,updatedAt,roleId,functionId,roleRightId',\n      aRoleInc: 'createdAt,updatedAt,roleId,roleIdInc',\n      aRoleIncRef: 'createdAt,updatedAt,roleId,roleIdInc,roleIdSrc',\n      aRoleRef: 'createdAt,updatedAt,roleId,roleIdParent',\n      aRoleRight: 'createdAt,updatedAt,roleId,atomClassId+action',\n      aRoleRightRef: 'createdAt,updatedAt,roleRightId,roleId,atomClassId+action,roleIdScope',\n      aUser: 'createdAt,updatedAt,userName,email,mobile',\n      aUserAgent: 'createdAt,updatedAt,userId,userIdAgent',\n      aUserRole: 'createdAt,updatedAt,userId,roleId',\n    },\n    'a-cache': {\n      aCache: 'createdAt,updatedAt,module+name',\n    },\n    'a-cms': {\n      aCmsArticle: 'createdAt,updatedAt,atomId,categoryId,sticky,sorting',\n      aCmsArticleTag: 'createdAt,updatedAt,atomId,itemId',\n      aCmsArticleTagRef: 'createdAt,updatedAt,atomId,itemId,tagId',\n      aCmsCategory: 'createdAt,updatedAt,categoryName,sorting,categoryIdParent',\n      aCmsContent: 'createdAt,updatedAt,atomId,itemId,content:fulltext',\n      aCmsTag: 'createdAt,updatedAt,language+tagName',\n    },\n    'a-file': {\n      aFile: 'createdAt,updatedAt,userId,downloadId,atomId',\n    },\n    'a-instance': {\n      aInstance: 'createdAt,updatedAt,name',\n    },\n    'a-sequence': {\n      aSequence: 'createdAt,updatedAt,module+name',\n    },\n    'a-settings': {\n      aSettings: 'createdAt,updatedAt,module+scene+userId',\n      aSettingsRef: 'createdAt,updatedAt,module+scene+userId+name',\n    },\n    'a-status': {\n      aStatus: 'createdAt,updatedAt,module+name',\n    },\n\n  };\n  // indexes extend\n  config.indexesExtend = null;\n  // indexesCheck\n  config.indexesCheck = true;\n\n  return config;\n};\n","module.exports = {\n  'zh-cn': require('./locale/zh-cn.js'),\n};\n","module.exports = {\n};\n","// error code should start from 1001\nmodule.exports = {\n};\n","module.exports = {\n};\n","const version = require('./controller/version.js');\n\nmodule.exports = app => {\n  const routes = [\n    // version\n    { method: 'post', path: 'version/update', controller: version, middlewares: 'inner' },\n    { method: 'post', path: 'version/init', controller: version, middlewares: 'inner' },\n    { method: 'post', path: 'version/test', controller: version, middlewares: 'test' },\n  ];\n  return routes;\n};\n","module.exports = app => {\n  class VersionController extends app.Controller {\n\n    async update() {\n      await this.service.version.update(this.ctx.request.body);\n      this.ctx.success();\n    }\n\n    async init() {\n      await this.service.version.init(this.ctx.request.body);\n      this.ctx.success();\n    }\n\n    async test() {\n      await this.service.version.test(this.ctx.request.body);\n      this.ctx.success();\n    }\n\n  }\n  return VersionController;\n};\n","const version = require('./service/version.js');\n\nmodule.exports = app => {\n  const services = {\n    version,\n  };\n  return services;\n};\n","const require3 = require('require3');\nconst extend = require3('extend2');\nconst chalk = require3('chalk');\n\nmodule.exports = app => {\n\n  class Version extends app.Service {\n\n    async update(options) {\n      // check indexes\n      if (this.ctx.config.indexesCheck) {\n        const indexes = extend(true, {}, this.ctx.config.indexes, this.ctx.config.indexesExtend);\n        for (const moduleRelativeName in indexes) {\n          if (this.app.meta.modules[moduleRelativeName]) {\n            const moduleIndexes = indexes[moduleRelativeName];\n            for (const tableName in moduleIndexes) {\n              await this._createIndexesOnTable({ tableName, indexes: moduleIndexes[tableName] });\n            }\n          }\n        }\n      }\n    }\n\n    async init(options) {\n    }\n\n    async test() {\n    }\n\n    async _createIndexesOnTable({ tableName, indexes }) {\n      try {\n        const _indexArray = indexes.split(',');\n        const list = await this.ctx.model.query(`show index from ${tableName}`);\n        const map = {};\n        for (const item of list) {\n          map[item.Column_name] = item.Index_type;\n        }\n        for (const _index of _indexArray) {\n          const _arr = _index.split(':');\n          const fieldNames = _arr[0];\n          const fieldNameArray = fieldNames.split('+');\n          const fieldNameFirst = fieldNameArray[0];\n          const indexType = _arr[1] || '';\n          if (!map[fieldNameFirst]) {\n            const sql = `create ${indexType} index idx_${tableName}_${fieldNameArray.join('_')} ON ${tableName} (${fieldNameArray.join(',')})`;\n            await this.ctx.model.query(sql);\n          }\n        }\n      } catch (e) {\n        // just log the error message\n        console.log(chalk.red(e.message));\n        if (e.sql) console.log(chalk.red(e.sql));\n      }\n    }\n\n  }\n\n  return Version;\n};\n","module.exports = require(\"require3\");","module.exports = app => {\n  const models = {\n  };\n  return models;\n};\n","module.exports = app => {\n  const schemas = require('./config/validation/schemas.js')(app);\n  const meta = {\n    base: {\n      atoms: {\n      },\n      functions: {\n      },\n    },\n    validation: {\n      validators: {\n      },\n      keywords: {},\n      schemas: {\n      },\n    },\n  };\n  return meta;\n};\n","module.exports = app => {\n  const schemas = {};\n  return schemas;\n};\n"],"sourceRoot":""}